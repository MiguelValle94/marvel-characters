// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CharacterListContainer should display characters list 1`] = `
<Connect(CharacterListContainer)
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <CharacterListContainer
    characters={
      Array [
        Object {},
        Object {},
      ]
    }
    dispatch={[Function]}
    filters={
      Object {
        "orderBy": "name",
      }
    }
    pagination={
      Object {
        "page": 1,
        "pages": 2,
      }
    }
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  >
    <div
      className="container"
    >
      <Component />
      <Component
        onSelectPage={[Function]}
        page={1}
        pages={2}
      />
      <Component
        characters={
          Array [
            Object {},
            Object {},
          ]
        }
      />
      <Component
        onSelectPage={[Function]}
        page={1}
        pages={2}
      />
    </div>
  </CharacterListContainer>
</Connect(CharacterListContainer)>
`;

exports[`CharacterListContainer should display loading message while loading 1`] = `
<Connect(CharacterListContainer)
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <CharacterListContainer
    dispatch={[Function]}
    filters={
      Object {
        "orderBy": "name",
      }
    }
    isLoading={true}
    pagination={
      Object {
        "page": 1,
        "pages": 2,
      }
    }
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  >
    <div
      className="container"
    >
      <Component />
      <Component
        onSelectPage={[Function]}
        page={1}
        pages={2}
      />
      <p>
        Loading...
      </p>
      <Component
        onSelectPage={[Function]}
        page={1}
        pages={2}
      />
    </div>
  </CharacterListContainer>
</Connect(CharacterListContainer)>
`;
