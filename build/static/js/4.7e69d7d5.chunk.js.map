{"version":3,"sources":["components/Error/Error.js","constants/config.constants.js","constants/error-messages.constants.js","state/actions/character-details.actions.js","components/CharacterDetailsContainer/CharacterDetails/CharacterDetails.js","components/CharacterDetailsContainer/CharacterDetailsContainer.js"],"names":["Error","message","className","role","MARVEL_API_URL","CHARACTERS_ENDPOINT","API_KEY","CUSTOM_ERROR_MESSAGE","fetchCharacterDetails","id","dispatch","type","FETCH_CHARACTER_DETAILS_START","fetch","then","response","json","payload","data","code","status","FETCH_CHARACTER_DETAILS_SUCCESS","catch","error","FETCH_CHARACTER_DETAILS_ERROR","fetchCharacterDetailsError","CharacterDetails","character","src","thumbnail","path","extension","alt","name","description","Date","modified","toLocaleString","getCharacterFromDetails","state","characterDetails","getCharacterFromList","characters","find","toString","connect","ownProps","match","params","isLoading","useParams","useEffect","Spinner","to"],"mappings":"6HAAA,sDAGe,SAASA,EAAT,GAA6B,IAAZC,EAAW,EAAXA,QAC9B,OACE,yBAAKC,UAAU,qBAAqBC,KAAK,SACtCF,K,gCCNP,sGAAO,IAAMG,EAAiB,iCACjBC,EAAsB,wBACtBC,EAAU,oC,gCCFvB,kCAAO,IAAMC,EAAuB,+B,8HCgC7B,IAAMC,EAAwB,SAACC,GAAD,OAAQ,SAACC,GAE5C,OADAA,EApBO,CACLC,KAAMC,MAoBDC,MAAM,GAAD,OACPT,KADO,OACUC,IADV,YACiCI,EADjC,mBAC8CH,MAEvDQ,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,YAA6B,IApBMG,EAoBhCC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACnB,GAAID,GAAQ,KAAOA,EAAO,IACxB,MAAMC,EAERV,GAxBuCO,EAwBDC,EAvBnC,CACLP,KAAMU,IACNJ,gBAuBCK,OAAM,SAACC,GAAD,OACLb,EApBC,SAAoCa,GACzC,MAAO,CACLZ,KAAMa,IACND,SAkBIE,CAA2B,CACzBxB,QACEsB,GAA0B,kBAAVA,EAAqBA,EAAQhB,YC7C1C,SAASmB,EAAT,GAA0C,IAAdC,EAAa,EAAbA,UACzC,OACE,yBAAKzB,UAAU,aACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,YACb,yBACE0B,IAAG,UAAKD,EAAUE,UAAUC,KAAzB,YAAiCH,EAAUE,UAAUE,WACxD7B,UAAU,WACV8B,IAAKL,EAAUM,QAGnB,yBAAK/B,UAAU,YACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,cAAcyB,EAAUM,MACtC,uBAAG/B,UAAU,aACVyB,EAAUO,aAAe,6BAE5B,uBAAGhC,UAAU,aACX,2BAAOA,UAAU,cAAjB,gBACgB,IAAIiC,KAAKR,EAAUS,UAAUC,uB,0BCY3D,SAASC,EAAwBC,GAC/B,OAAOA,EAAMC,iBAAiBA,iBAGhC,SAASC,EAAqBF,EAAO9B,GACnC,OAAO8B,EAAMG,WAAWA,WAAWC,MACjC,SAAChB,GAAD,OAAeA,EAAUlB,GAAGmC,aAAenC,KAYhCoC,uBARS,SAACN,EAAOO,GAAR,MAAsB,CAC5CnB,UACEW,EAAwBC,IACxBE,EAAqBF,EAAOO,EAASC,MAAMC,OAAOvC,IACpDwC,UAAWV,EAAMC,iBAAiBS,UAClC1B,MAAOgB,EAAMC,iBAAiBjB,SAGjBsB,EAzCf,YAA+E,IAA1ClB,EAAyC,EAAzCA,UAAWjB,EAA8B,EAA9BA,SAAUuC,EAAoB,EAApBA,UAAW1B,EAAS,EAATA,MAC7Dd,EAAOyC,cAAPzC,GAMN,OAJA0C,qBAAU,WACRzC,EAASF,EAAsBC,MAC9B,CAACC,EAAUD,IAEPwC,EACL,kBAACG,EAAA,EAAD,MAEA,yBAAKlD,UAAU,kDACb,kBAAC,IAAD,CAAMmD,GAAG,IAAInD,UAAU,4CACrB,uBAAGA,UAAU,qBADf,mBAGCqB,EACC,kBAACvB,EAAA,EAAD,CAAOC,QAASsB,EAAMtB,UAEtB,kBAACyB,EAAD,CAAkBC,UAAWA","file":"static/js/4.7e69d7d5.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Error({ message }) {\n  return (\n    <div className='alert alert-danger' role='alert'>\n      {message}\n    </div>\n  );\n}\n\nError.propTypes = {\n  message: PropTypes.string.isRequired\n};\n","export const MARVEL_API_URL = 'https://gateway.marvel.com:443';\nexport const CHARACTERS_ENDPOINT = '/v1/public/characters';\nexport const API_KEY = '36f48a90c6a7ffda5c8132cd5c3381d2';\n","export const CUSTOM_ERROR_MESSAGE = 'Oops, something went wrong.';\n","import {\n  FETCH_CHARACTER_DETAILS_START,\n  FETCH_CHARACTER_DETAILS_SUCCESS,\n  FETCH_CHARACTER_DETAILS_ERROR\n} from './types';\nimport {\n  MARVEL_API_URL,\n  CHARACTERS_ENDPOINT,\n  API_KEY\n} from '../../constants/config.constants';\nimport { CUSTOM_ERROR_MESSAGE } from '../../constants/error-messages.constants';\n\nexport function fetchCharacterDetailsStart() {\n  return {\n    type: FETCH_CHARACTER_DETAILS_START\n  };\n}\n\nexport function fetchCharacterDetailsSuccess(payload) {\n  return {\n    type: FETCH_CHARACTER_DETAILS_SUCCESS,\n    payload\n  };\n}\n\nexport function fetchCharacterDetailsError(error) {\n  return {\n    type: FETCH_CHARACTER_DETAILS_ERROR,\n    error\n  };\n}\n\nexport const fetchCharacterDetails = (id) => (dispatch) => {\n  dispatch(fetchCharacterDetailsStart());\n  return fetch(\n    `${MARVEL_API_URL}${CHARACTERS_ENDPOINT}/${id}?apikey=${API_KEY}`\n  )\n    .then((response) => response.json())\n    .then(({ data, code, status }) => {\n      if (code >= 400 && code < 500) {\n        throw status;\n      }\n      dispatch(fetchCharacterDetailsSuccess(data));\n    })\n    .catch((error) =>\n      dispatch(\n        fetchCharacterDetailsError({\n          message:\n            error && typeof error === 'string' ? error : CUSTOM_ERROR_MESSAGE\n        })\n      )\n    );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function CharacterDetails({ character }) {\n  return (\n    <div className='card mb-3'>\n      <div className='row no-gutters'>\n        <div className='col-md-4'>\n          <img\n            src={`${character.thumbnail.path}.${character.thumbnail.extension}`}\n            className='card-img'\n            alt={character.name}\n          />\n        </div>\n        <div className='col-md-8'>\n          <div className='card-body'>\n            <h1 className='card-title'>{character.name}</h1>\n            <p className='card-text'>\n              {character.description || 'No description available.'}\n            </p>\n            <p className='card-text'>\n              <small className='text-muted'>\n                Last updated {new Date(character.modified).toLocaleString()}\n              </small>\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nCharacterDetails.propTypes = {\n  character: PropTypes.object.isRequired\n};\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { useParams, Link } from 'react-router-dom';\n\nimport { fetchCharacterDetails } from '../../state/actions/character-details.actions';\nimport CharacterDetails from './CharacterDetails';\nimport Error from '../Error';\nimport Spinner from '../Spinner';\n\nimport './CharacterDetailsContainer.scss';\n\nfunction CharacterDetailsContainer({ character, dispatch, isLoading, error }) {\n  let { id } = useParams();\n\n  useEffect(() => {\n    dispatch(fetchCharacterDetails(id));\n  }, [dispatch, id]);\n\n  return isLoading ? (\n    <Spinner />\n  ) : (\n    <div className='character-details-container__wrapper container'>\n      <Link to='/' className='character-details-container__back-button'>\n        <i className='fa fa-arrow-left'></i> All characters\n      </Link>\n      {error ? (\n        <Error message={error.message} />\n      ) : (\n        <CharacterDetails character={character} />\n      )}\n    </div>\n  );\n}\n\nfunction getCharacterFromDetails(state) {\n  return state.characterDetails.characterDetails;\n}\n\nfunction getCharacterFromList(state, id) {\n  return state.characters.characters.find(\n    (character) => character.id.toString() === id\n  );\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  character:\n    getCharacterFromDetails(state) ||\n    getCharacterFromList(state, ownProps.match.params.id),\n  isLoading: state.characterDetails.isLoading,\n  error: state.characterDetails.error\n});\n\nexport default connect(mapStateToProps)(CharacterDetailsContainer);\n"],"sourceRoot":""}